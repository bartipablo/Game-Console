#ifndef WiFiIcon_H
#define WiFiIcon_H

#include "../common/Icon.h"

class WiFiIcon : public Icon {
public:
    WiFiIcon() {
        width = 20;
        height = 20;
        pixelSize = 5;
        position = Vector2D(110, 70);
    }

    int getRGB565(int x, int y) override {
        if (x < 0 || x >= width || y < 0 || y >= height)
            return 0;
        return bitmap[x][y];
    }

private:
/**
 * Icon 20x20 represented by a 2D array of RGB565 values.
*/
    const unsigned short bitmap[20][20] = {
        {0, 0, 0, 0, 0, 0, 0, 0, 2125, 15, 15, 2125, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 50, 58, 31, 31, 31, 31, 31, 31, 58, 4242, 0, 0, 0, 0, 0},
        {0, 0, 0, 2159, 4252, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 2159, 0, 0, 0},
        {0, 0, 2133, 63, 31, 31, 31, 2142, 4282, 25, 25, 4282, 2142, 31, 31, 31, 63, 4245, 0, 0},
        {0, 4246, 31, 31, 31, 4284, 49, 0, 0, 0, 0, 0, 0, 49, 60, 31, 31, 31, 6358, 0},
        {2161, 31, 31, 31, 4243, 0, 0, 47, 22, 25, 25, 22, 15, 0, 0, 2131, 31, 31, 31, 2161},
        {20, 31, 31, 16, 0, 15, 28, 31, 31, 31, 31, 31, 31, 28, 15, 0, 16, 31, 31, 20},
        {4, 4245, 15, 0, 2165, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 21, 0, 15, 4278, 2115},
        {0, 0, 0, 4245, 31, 31, 31, 2172, 4244, 15, 15, 2164, 2172, 31, 31, 31, 52, 0, 0, 0},
        {0, 0, 0, 28, 31, 63, 50, 0, 0, 0, 0, 0, 0, 18, 31, 31, 28, 0, 0, 0},
        {0, 0, 0, 55, 30, 2128, 0, 2129, 27, 31, 31, 59, 16, 0, 16, 30, 23, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 21, 31, 31, 31, 31, 31, 31, 21, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 2157, 31, 31, 31, 61, 61, 31, 31, 31, 4238, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 14, 31, 31, 2161, 0, 0, 2161, 31, 31, 4238, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 4242, 15, 0, 4235, 4235, 0, 15, 18, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 4237, 31, 31, 4237, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 21, 31, 31, 21, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 43, 2143, 2143, 2123, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    };
};

#endif
