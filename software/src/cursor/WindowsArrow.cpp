#include "WindowsArrow.h"

namespace cursor {

WindowsArrow::WindowsArrow() {
    /** The arrow is represented by a 19x12 matrix of characters.
    * '0' - no pixel
    * '1' - black pixel
    * '2' - white pixel
    */
    constexpr int widthPx = 12;
    constexpr int heightPx = 19;

    static const PROGMEM char arrowCharRepresentation[heightPx][widthPx] = {
            {'1','0','0','0','0','0','0','0','0','0','0','0'},
            {'1','1','0','0','0','0','0','0','0','0','0','0'},
            {'1','2','1','0','0','0','0','0','0','0','0','0'},
            {'1','2','2','1','0','0','0','0','0','0','0','0'},
            {'1','2','2','2','1','0','0','0','0','0','0','0'},
            {'2','2','2','2','2','1','0','0','0','0','0','0'},
            {'1','2','2','2','2','2','1','0','0','0','0','0'},
            {'1','2','2','2','2','2','2','1','0','0','0','0'},
            {'1','2','2','2','2','2','2','2','1','0','0','0'},
            {'1','2','2','2','2','2','2','2','2','1','0','0'},
            {'1','2','2','2','2','2','2','2','2','2','1','0'},
            {'1','2','2','2','2','2','2','2','2','2','2','1'},
            {'1','2','2','2','2','2','2','2','1','1','1','0'},
            {'1','2','2','2','2','2','2','1','0','0','0','0'},
            {'1','2','2','2','1','2','2','2','1','0','0','0'},
            {'1','2','2','1','0','1','2','2','1','0','0','0'},
            {'1','2','1','0','0','0','1','2','2','1','0','0'},
            {'1','1','0','0','0','0','1','2','2','1','0','0'},
            {'0','0','0','0','0','0','0','1','1','0','0','0'}
    };

    for (int y = 0; y < heightPx; y++) {
        for (int x = 0; x < widthPx; x++) {
            char c = pgm_read_byte(&arrowCharRepresentation[y][x]);

            if (c == '1') {
                pixels.push_back(Pixel(Vector2D(x, y), Color::BLACK_));
            } 
            else if (c == '2') {
                pixels.push_back(Pixel(Vector2D(x, y), Color::WHITE_));
            }
        }
    }
}

}